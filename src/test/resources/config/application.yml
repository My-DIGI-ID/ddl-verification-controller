# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
  application:
    name: VerificationController
  jackson:
    serialization:
      write-durations-as-timestamps: false
  data:
    mongodb:
      host: localhost
      port: 0
      database: VerificationController
  mail:
    host: localhost
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: i18n/messages
  task:
    execution:
      thread-name-prefix: verification-controller-task-
      pool:
        core-size: 1
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: verification-controller-scheduling-
      pool:
        size: 1
  thymeleaf:
    mode: HTML

server:
  port: 10344
  address: localhost

ssibk:
  verification:
    controller:
      apikey: {api-key}

      admin:
        username: {hotel-username}
        password: {hotel-password}

      agent:
        apikey: abcdefghijkl
        apiurl: {hotel-agent-api-url} # the Hotel agent admin url
        recipientkey: {hotel-agent-recepient-key} # the Hotel agent verkey, here for the seed 000...Hotel; can be retrieved via curl -X GET "http://localhost:10080/wallet/did" -H  "accept: application/json" -H "X-Api-Key: abcdefghijkl" | jq ".results[0]" | jq ".verkey" | sed 's/"//g' once the agent is running
        endpoint: {hotel-agent-endpoint} # the Hotel agent endpoint
        endpointName: IBM Hotel # the name of the endpoint (visible to end users in the proof request dialog of the wallet app)

        # The credential definition ids of all master ids that will be accepted in the proof
        masterid:
          credential_definition_ids: {credential_definition_id}

        # The credential definition ids of all corporate ids that will be accepted in the proof
        corporateid:
          # credential_definition_ids: JiVLsA5wxVnbHQ5s7pDN58:3:CL:7:kJOWGiNCj0ieafRo, JiVLsA5wxVnbHQ5s7pDN58:3:CL:7:corporateID
          schema_ids: {schems-id}
          issuer_dids: {issuer_dids}

      integrationservice:
        apiurl: http://localhost:9081/api
        apikey: 123
      events:
        connection:
          timeout: 3600000

      trello:
        apiurl: { Trello API url }
        apikey: { Trell apikey }
        apitoken: { Trell apitoken }
        idlist: { Trell idlist }
        issue: { Trell issue }
        question: { Trell question }
        comment: { Trell comment }

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'verificationControllerApp'
  logging:
    # To test json console appender
    use-json-format: false
    logstash:
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  mail:
    from: test@localhost
    base-url: http://127.0.0.1:8080
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
        base64-secret: {secret}
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
  metrics:
    logs: # Reports metrics in the logs
      enabled: true
      report-frequency: 60 # in seconds

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
